"use strict";

var _Reflect$construct = require("@babel/runtime-corejs3/core-js-stable/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = exports.SideType = exports.Rook = exports.Queen = exports.PieceType = exports.Piece = exports.Pawn = exports.Knight = exports.King = exports.Bishop = void 0;

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
	The Piece is a definition of a piece that can be played on the board.

	The uid property of the Piece is not intended to be durable across
	sessions, but only to uniquely identify the piece on the board. Right
	now the property is used by board.getSquareByPiece as pieces are not
	otherwise uniquely identifiable (i.e. getSquareByPiece(Pawn) would
	return the first square found with a Pawn on it rather than the exact
	square intended). Additionally, the uid of the Piece is used in
	BoardValidation to ensure there is correllation between the piece and
	valid squares to which the piece can move.
*/
// types
var PieceType = {
  Bishop: 'bishop',
  King: 'king',
  Knight: 'knight',
  Pawn: 'pawn',
  Queen: 'queen',
  Rook: 'rook'
};
exports.PieceType = PieceType;
var SideType = {
  Black: {
    name: 'black'
  },
  White: {
    name: 'white'
  }
};
exports.SideType = SideType;

var Piece = /*#__PURE__*/function () {
  function Piece(side, notation) {
    (0, _classCallCheck2["default"])(this, Piece);
    this.moveCount = 0;
    this.notation = notation;
    this.side = side;
    this.type = null;
  }

  (0, _createClass2["default"])(Piece, null, [{
    key: "createBishop",
    value: function createBishop(side) {
      return new Bishop(side);
    }
  }, {
    key: "createKing",
    value: function createKing(side) {
      return new King(side);
    }
  }, {
    key: "createKnight",
    value: function createKnight(side) {
      return new Knight(side);
    }
  }, {
    key: "createPawn",
    value: function createPawn(side) {
      return new Pawn(side);
    }
  }, {
    key: "createQueen",
    value: function createQueen(side) {
      return new Queen(side);
    }
  }, {
    key: "createRook",
    value: function createRook(side) {
      return new Rook(side);
    }
  }]);
  return Piece;
}();

exports.Piece = Piece;

var Bishop = /*#__PURE__*/function (_Piece) {
  (0, _inherits2["default"])(Bishop, _Piece);

  var _super = _createSuper(Bishop);

  function Bishop(side) {
    var _this;

    (0, _classCallCheck2["default"])(this, Bishop);
    _this = _super.call(this, side, 'B');
    _this.type = PieceType.Bishop;
    return _this;
  }

  return (0, _createClass2["default"])(Bishop);
}(Piece);

exports.Bishop = Bishop;

var King = /*#__PURE__*/function (_Piece2) {
  (0, _inherits2["default"])(King, _Piece2);

  var _super2 = _createSuper(King);

  function King(side) {
    var _this2;

    (0, _classCallCheck2["default"])(this, King);
    _this2 = _super2.call(this, side, 'K');
    _this2.type = PieceType.King;
    return _this2;
  }

  return (0, _createClass2["default"])(King);
}(Piece);

exports.King = King;

var Knight = /*#__PURE__*/function (_Piece3) {
  (0, _inherits2["default"])(Knight, _Piece3);

  var _super3 = _createSuper(Knight);

  function Knight(side) {
    var _this3;

    (0, _classCallCheck2["default"])(this, Knight);
    _this3 = _super3.call(this, side, 'N');
    _this3.type = PieceType.Knight;
    return _this3;
  }

  return (0, _createClass2["default"])(Knight);
}(Piece);

exports.Knight = Knight;

var Pawn = /*#__PURE__*/function (_Piece4) {
  (0, _inherits2["default"])(Pawn, _Piece4);

  var _super4 = _createSuper(Pawn);

  function Pawn(side) {
    var _this4;

    (0, _classCallCheck2["default"])(this, Pawn);
    _this4 = _super4.call(this, side, '');
    _this4.type = PieceType.Pawn;
    return _this4;
  }

  return (0, _createClass2["default"])(Pawn);
}(Piece);

exports.Pawn = Pawn;

var Queen = /*#__PURE__*/function (_Piece5) {
  (0, _inherits2["default"])(Queen, _Piece5);

  var _super5 = _createSuper(Queen);

  function Queen(side) {
    var _this5;

    (0, _classCallCheck2["default"])(this, Queen);
    _this5 = _super5.call(this, side, 'Q');
    _this5.type = PieceType.Queen;
    return _this5;
  }

  return (0, _createClass2["default"])(Queen);
}(Piece);

exports.Queen = Queen;

var Rook = /*#__PURE__*/function (_Piece6) {
  (0, _inherits2["default"])(Rook, _Piece6);

  var _super6 = _createSuper(Rook);

  function Rook(side) {
    var _this6;

    (0, _classCallCheck2["default"])(this, Rook);
    _this6 = _super6.call(this, side, 'R');
    _this6.type = PieceType.Rook;
    return _this6;
  }

  return (0, _createClass2["default"])(Rook);
}(Piece);

exports.Rook = Rook;
var _default = {
  Piece: Piece,
  PieceType: PieceType,
  SideType: SideType
};
exports["default"] = _default;
//# sourceMappingURL=piece.js.map
